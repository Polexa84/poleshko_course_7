name: Django CI/CD Pipeline

on:
  push:
    branches:
      - develop_1

jobs:
  test:
    runs-on: ubuntu-latest
    services:
      postgres:
        image: postgres:14
        ports:
          - "5432:5432"
        env:
          POSTGRES_USER: postgres
          POSTGRES_PASSWORD: password
          POSTGRES_DB: testdb
        options: >-
          --health-cmd pg_isready
          --health-interval 10s
          --health-timeout 5s
          --health-retries 5
      redis:
        image: redis:7-alpine
        ports:
          - "6379:6379"
        options: >-
          --health-cmd "redis-cli ping"
          --health-interval 10s
          --health-timeout 5s
          --health-retries 5

    env:
      DATABASE_URL: postgres://postgres:password@postgres:5432/testdb
      REDIS_URL: redis://redis:6379/0
      DJANGO_SETTINGS_MODULE: habit_tracker.settings
      PYTHONUNBUFFERED: 1

    steps:
    - uses: actions/checkout@v4

    - name: Set up Python 3.10
      uses: actions/setup-python@v4
      with:
        python-version: '3.10'
        cache: 'pip'

    - name: Install dependencies
      run: |
        python -m pip install --upgrade pip
        pip install -r requirements.txt
        pip install pytest pytest-django

    - name: Wait for services
      run: |
        apt-get update && apt-get install -y netcat
        echo "Waiting for PostgreSQL..."
        while ! nc -z postgres 5432; do sleep 1; done
        echo "Waiting for Redis..."
        while ! nc -z redis 6379; do sleep 1; done

    - name: Run migrations
      run: python manage.py migrate --no-input

    - name: Run tests
      run: |
        python manage.py test --no-input --parallel 4
        pytest -v --cov=.

  deploy:
    needs: test
    runs-on: ubuntu-latest
    timeout-minutes: 15

    steps:
    - uses: actions/checkout@v4

    - name: Setup SSH
      uses: webfactory/ssh-agent@v0.8.0
      with:
        ssh-private-key: ${{ secrets.SSH_PRIVATE_KEY }}

    - name: Add server to known hosts
      run: |
        mkdir -p ~/.ssh
        ssh-keyscan -H ${{ secrets.SERVER_IP }} >> ~/.ssh/known_hosts

    - name: Rsync deployment
      run: |
        rsync -avz --delete \
          --exclude '__pycache__' \
          --exclude '.env' \
          --exclude '.git' \
          ./ ${{ secrets.SSH_USER }}@${{ secrets.SERVER_IP }}:${{ secrets.DEPLOY_DIR }}

    - name: Remote deployment commands
      run: |
        ssh -o StrictHostKeyChecking=no \
          ${{ secrets.SSH_USER }}@${{ secrets.SERVER_IP }} << 'EOF'
          set -euxo pipefail
          cd ${{ secrets.DEPLOY_DIR }}
          source venv/bin/activate
          pip install -r requirements.txt --no-cache-dir
          python manage.py migrate --no-input
          python manage.py collectstatic --no-input
          sudo systemctl restart gunicorn
          sudo systemctl reload nginx
        EOF